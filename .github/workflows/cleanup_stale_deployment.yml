# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "master" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on: [workflow_dispatch]
#   schedule:
#   - cron: '* * * * *'

env:
  PROJECT_ID: astute-citadel-372906 # GCP Project ID
  GKE_CLUSTER: autopilot-cluster-2  # GKE Cluster Name
  GKE_REGION: us-central1	          # GKE Cluster Region 

jobs:
 ConnectToGKE:
    name: ConnectToGke
    runs-on: ubuntu-latest
    environment: Development

    steps:
    - name: Checkout
      uses: actions/checkout@v3


    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_CLUSTER_CONNECTION }}'

  
   # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
      #  location: ${{ env.GKE_REGION }}
      
    - name: GKE Config
      run: KUBECONFIG=~/.kube/config && gcloud container clusters get-credentials autopilot-cluster-2 --region us-central1 --project astute-citadel-372906

         .
   # RUn Clean UP Script
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
         ls -l
         chmod +x cleanup_stage_deployments.sh
         
