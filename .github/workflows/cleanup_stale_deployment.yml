# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "master" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on: [workflow_dispatch]
#   schedule:
#   - cron: '* * * * *'

env:
  PROJECT_ID: astute-citadel-372906 # GCP Project ID
  GKE_CLUSTER: autopilot-cluster-2  # GKE Cluster Name
  GKE_REGION: us-central1	          # GKE Cluster Region 

jobs:
 ConnectToGKE:
    name: ConnectToGke
    runs-on: ubuntu-latest
    environment: Development

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: List the files
      run: |-
         ls -al
         chmod +x cleanup_stage_deployments.sh
         ls -la
      


    # Alternative option - authentication via credentials json
    - id: "google-auth"
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_CLUSTER_CONNECTION }}'
        
    - name: "Set up Cloud SDK" 
      uses: "google-github-actions/setup-gcloud@v0"
  
  
    
    - name: GKE Config
      run: |-
         gcloud components install gke-gcloud-auth-plugin
         export USE_GKE_GCLOUD_AUTH_PLUGIN=True >>  ~/.bashrc
         KUBECONFIG=~/.kube/config && gcloud container clusters get-credentials autopilot-cluster-2 --region us-central1 --project astute-citadel-372906
    
    - name: run clean up script
      run: |-
        ./cleanup_stage_deployments.sh
